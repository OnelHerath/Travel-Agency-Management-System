import React, { useEffect, useState, useRef } from 'react';
import axios from 'axios';
import { Bar, Pie } from 'react-chartjs-2';
import { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';
import html2canvas from 'html2canvas';
import jsPDF from 'jspdf';
import 'jspdf-autotable';

// Register necessary components for the bar and pie charts
Chart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement);

const NationalityReport = () => {
  const [nationalityData, setNationalityData] = useState({ labels: [], datasets: [] });
  const barChartRef = useRef(null);
  const pieChartRef = useRef(null);

  useEffect(() => {
    // Fetch customer data
    axios.get('http://localhost:5555/customers')
      .then(response => {
        const customers = response.data.data;
        const nationalityCount = {};

        // Count occurrences of each nationality
        customers.forEach(customer => {
          const nationality = customer.nationality;
          if (nationalityCount[nationality]) {
            nationalityCount[nationality]++;
          } else {
            nationalityCount[nationality] = 1;
          }
        });

        // Prepare chart data
        const labels = Object.keys(nationalityCount);
        const data = Object.values(nationalityCount);

        setNationalityData({
          labels,  // Nationalities as labels
          datasets: [{
            label: 'Number of Customers by Nationality',
            data, // Counts as dataset
            backgroundColor: 'rgba(54, 162, 235, 0.6)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1,
          }]
        });
      })
      .catch(error => {
        console.error('Error fetching customer data:', error);
      });
  }, []);

  // Function to download the charts as PDF
  const downloadPDF = async () => {
    const barCanvas = await html2canvas(barChartRef.current.canvas);
    const pieCanvas = await html2canvas(pieChartRef.current.canvas);

    const pdf = new jsPDF();
    pdf.setFont('Arial', 'bold');
    pdf.setFontSize(22);
    pdf.text('Customer Nationalities Report', 20, 20);
    pdf.setFontSize(16);
    pdf.text(`Date: ${new Date().toLocaleDateString()}`, 20, 30);
    pdf.setFontSize(12);
    pdf.text('This report presents the distribution of customer nationalities.', 20, 40);
    
    // Bar Chart
    pdf.addImage(barCanvas.toDataURL('image/png'), 'PNG', 20, 50, 170, 90);
    pdf.addPage();
    
    // Pie Chart
    pdf.addImage(pieCanvas.toDataURL('image/png'), 'PNG', 20, 20, 170, 90);
    
    // Footer
    pdf.setFontSize(14);
    pdf.text('Generated by Exciting Travels Holidays Sri Lanka', 20, pdf.internal.pageSize.height - 10);
    
    pdf.save('nationality_report.pdf');
  };

  return (
    <div className="bg-gradient-to-r from-purple-200 to-purple-400 min-h-screen p-6">
      <h2 className='text-center text-5xl font-bold my-4 text-gray-800'>Customer Nationalities</h2>

      {/* Bar Chart */}
      <div className="flex justify-center">
        <div className="w-full max-w-2xl bg-white shadow-md rounded-lg p-4">
          <h3 className='text-center text-3xl font-semibold my-4 text-gray-700'>Bar Chart</h3>
          <Bar
            ref={barChartRef}
            data={nationalityData}
            options={{
              responsive: true,
              plugins: {
                legend: {
                  display: true,
                  position: 'top',
                },
                title: {
                  display: true,
                  text: 'Customer Nationalities (Bar Chart)',
                  font: { size: 16 },
                },
              },
              scales: {
                y: {
                  beginAtZero: true,
                },
              },
            }}
          />
        </div>
      </div>

      {/* Pie Chart */}
      <div className="flex justify-center my-8">
        <div className="w-full max-w-2xl bg-white shadow-md rounded-lg p-4">
          <h4 className='text-center text-3xl font-semibold my-4 text-gray-700'>Pie Chart</h4>
          <Pie
            ref={pieChartRef}
            data={{
              labels: nationalityData.labels,
              datasets: [{
                label: 'Number of Customers by Nationality',
                data: nationalityData.datasets[0]?.data || [],
                backgroundColor: [
                  'rgba(255, 99, 132, 0.6)',
                  'rgba(54, 162, 235, 0.6)',
                  'rgba(255, 206, 86, 0.6)',
                  'rgba(75, 192, 192, 0.6)',
                  'rgba(153, 102, 255, 0.6)',
                  'rgba(255, 159, 64, 0.6)',
                ],
                borderColor: [
                  'rgba(255, 99, 132, 1)',
                  'rgba(54, 162, 235, 1)',
                  'rgba(255, 206, 86, 1)',
                  'rgba(75, 192, 192, 1)',
                  'rgba(153, 102, 255, 1)',
                  'rgba(255, 159, 64, 1)',
                ],
                borderWidth: 1,
              }]
            }}
            options={{
              responsive: true,
              plugins: {
                legend: {
                  display: true,
                  position: 'top',
                },
                title: {
                  display: true,
                  text: 'Customer Nationalities (Pie Chart)',
                  font: { size: 16 },
                },
              },
            }}
          />
        </div>
      </div>

      {/* Centered Download Button */}
      <div className="flex justify-center my-4">
        <button
          onClick={downloadPDF}
          className="px-6 py-3 bg-red-600 text-white rounded-lg shadow hover:bg-red-700 transition duration-200"
        >
          Download as PDF
        </button>
      </div>
    </div>
  );
};

export default NationalityReport;
